<% set_title("About", product_name_long) %>

<%=vars.product_name %> utilizes the Kubernetes platform to help you quickly and reliably deploy Greenplum clusters that are tailored for a variety of use cases, such as analytical processing with business intelligence tools or high-performance ETL operations for data scientists. Post-deployment, <%=vars.product_name %> helps you maintain your Greenplum cluster by expanding it to accommodate additional processing requirements or activating standby servers to maintain high availability.  

The <%=vars.product_name %> distribution for Kubernetes provides Docker images with the <%=vars.product_name %> Database software and the Greenplum Operator running on Ubuntu. The Greenplum Operator registers <%=vars.product_name %> as a first-class resource within Kubernetes, and orchestrates the deployment, management, and deletion of Greenplum in Kubernetes, as directed by your requests. In most cases, you simply specify the desired Greenplum configuration in a declarative YAML-formatted file, and provide that file to the Greenplum Operator.

## <a id="differences"></a>Differences from Greenplum Deployed on Hardware or VMs

<%=vars.product_name_long %> is functionally different from the <%=vars.product_name %> Database in other deployment environments:

- Certain features, such as MADlib, that are optional in other deployments are installed automatically with <%=vars.product_name_long %>.
- <%=vars.product_name_long %> uses Resource Group-based resource management by default, compared to other deployment environments that use Resource Queue-based resource management.
- <%=vars.product_name_long %> sets the default value of the `gp_resource_group_memory_limit` configuration parameter to 1.0, because it operates in an environment with reserved resources that are not shared between multiple primary and mirror segments.
- <%=vars.product_name_long %> does not currently support cluster monitoring with Greenplum Command Center. Use system-level monitoring tools such as Prometheus and Grafana until Greenplum Command Center support is available.
- <%=vars.product_name %> clusters in Kubernetes do not support installing Greenplum extensions that use the `.gppkg` format (and `gppkg` utility). Future releases will include these extensions as part of the distribution, as with MADlib.